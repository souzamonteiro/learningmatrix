#!/usr/local/bin/guash
#
# denormalize.gua
#
#     This script denormalizes a time series.
#
# Copyright (C) 2017 Roberto Luiz Souza Monteiro.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# RCS: @(#) $Id: denormalize.gua,v 1.0 2017/12/27 11:40:00 monteiro Exp $
#

#
# Configuration variables.
#
input_file = "noname"
output_file = "output.csv"
min_value = 0
max_value = 0

#
# Main program.
#
if (argc < 3) {
    println("Usage: denormalize option1 value1 [option1 value1]")
    exit
}

i = 2

while (i < argc) {
    if ((argv[i] == "-h") || (argv[i] == "--help")) {
        println("Usage: denormalize option1 value1 [option1 value1]")
        println("-h    --help    show the options sumary")
        println("-i              input file")
        println("-o              output file")
        println("      --min     minimum value of original series")
        println("      --max     maximum value of original series")
        exit(0)
    } elseif (argv[i] == "-i") {
        i = i + 1
        input_file = argv[i]
    } elseif (argv[i] == "-o") {
        i = i + 1
        output_file = argv[i]
    } elseif (argv[i] == "--min") {
        i = i + 1
        min_value = eval(argv[i])
    } elseif (argv[i] == "--max") {
        i = i + 1
        max_value = eval(argv[i])
    }
    i = i + 1
}

# Check if the input file name was supplied.
if (input_file == "noname") {
    println("Error: input file name is mandatory.")
    exit(1)
}

# Open the input file.
fi = fopen(input_file, "r")
fo = fopen(output_file, "w")

while (!feof(fi)) {
    if ((line1 = fgets(fi)) == NULL) {
        break
    }
    
    if (length(line1) > 0) {
        x = eval(line1)
        y = x * max_value - x * min_value + min_value
        
        fputs(y + "\n", fo)
    } else {
        continue
    }
}

fi = fclose(fi)
fo = fclose(fo)

